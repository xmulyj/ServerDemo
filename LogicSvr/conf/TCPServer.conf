[TCP_SERVER]
#server的基本信息
#如果连接者(设置了connect_num>0),这些信息会通过ping包发送给监听方
svr_id = 2
svr_num = 1    #有多少个相同svr_id的svr,各个svr由下面的svr_index来标识
svr_index = 0  #取值(0,1,...,svr_num-1),各个svr不能重复

#route rule路由规则
route_conf=../conf/Route.conf

#协议类型:bin或者http
pack_type = bin

#最大链接数
max_event = 1000

#链接空闲超时时间,空闲超过该值连接被close掉
idle_ms = 3000

#是否监听端口(设计时是可以同时监听多个端口的,目前实现只有一个)
#配置对应的TCP_LISTEN_i(i=0,1,...,listen_num-1)
listen_num  = 1

#是否需要连接到别的server,需要的话设置需要连接的server个数
#配置对应的TCP_CONNECT_i(i=0,1,...,connect_num-1)
connect_num = 0
connect_time_ms = 3000  #默认连接等待时间3s
ping_time_sec = 2    #默认2一次的ping包(这个时间值应该小于idles_ms的值,否则如果中间没有其他数据传送时,可能导致连接被对方关掉)


####会话参数(listen和connect共用)
#会话最大个数(默认100)
session_max_num = 100
#0:非阻塞 1:阻塞(默认0)
session_block = 0
#从数据包开始到接收完一个完整包的允许的时间(单位秒)(默认3s)
session_recvt_imeout = 3
#从数据包开始到发送完一个完整包的允许的时间(单位秒)(默认3s)
session_send_timeout = 3
#会话保存的最大接收数据长度(默认64K)
session_max_recv_size = 65536
#会话保存的最大发送数据长度(默认64K)
session_max_send_size = 65536

####请求控制
#每秒最大请求数(小等于0表示不限制)
req_per_sec = 1000
#请求超时(小等于0表示无限制,单位s)
req_timeout = 5

#listen的配置
[TCP_LISTEN_0]
#监听地址
ip = 127.0.0.1
#监听端口
port = 3002
#接收队列大小
back_log = 128

#connect的配置
[TCP_CONNECT_0]
ip = 127.0.0.1
port = 3536

[TCP_CONNECT_1]
ip = 127.0.0.1
port = 3536