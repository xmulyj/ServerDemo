[TCP_SERVER]  #server的基本信息
svr_id = 0  #如果连接者(设置了connect_num>0),这些信息会通过ping包发送给监听方
svr_num = 1  #有多少个相同svr_id的svr,各个svr由下面的svr_index来标识
svr_index = 0  #取值(0,1,...,svr_num-1),各个svr不能重复

pack_type = bin  #协议类型:bin或者http
max_event_num = 65535  #IOServer的最大事件数量(默认65535)
route_conf=../conf/Route.conf  #发送请求时使用的路由规则

#是否监听端口(设计时是可以同时监听多个端口的,目前实现只有一个)
#配置对应的TCP_LISTEN_i(i=0,1,...,listen_num-1)
listen_num  = 2

#是否需要连接到别的server,需要的话设置需要连接的server个数
#配置对应的TCP_CONNECT_i(i=0,1,...,connect_num-1)
connect_num = 0
connect_time = 3  #默认连接等待时间(单位秒)(默认3秒)
connect_ping_time = 2 #默认2秒一次的ping包(这个时间值应该小于session_idles_ms的值,否则如果中间没有其他数据传送时,可能导致连接被对方关掉)

##所有listen共用
[SESSION_LISTEN_COMM]
session_max_num = 100  #会话最大个数(默认100)
session_block = 0  #0:非阻塞 1:阻塞(默认0)
session_idle_time = 3  #空闲超时时间(单位秒)(默认3秒)
session_recv_timeout = 3  #从数据包开始到接收完一个完整包的允许的时间(单位秒)(默认3s)
session_send_timeout = 3  #从数据包开始到发送完一个完整包的允许的时间(单位秒)(默认3s)
session_max_recv_size = 65536 #会话保存的最大接收数据长度(默认64K)
session_max_send_size = 65536 #会话保存的最大发送数据长度(默认64K)
session_req_per_sec = 1000  #每秒最大请求数(小等于0表示不限制)
session_req_timeout = 5  #请求超时(小等于0表示无限制,单位秒)

##所有connect共有
[SESSION_CONNECT_COMM]
session_max_num = 1  #会话最大个数(默认100)  (注:目前只实现1个连接,后面可以考虑实现连接池)
session_block = 0  #0:非阻塞 1:阻塞(默认0)
session_idle_time = 3  #空闲超时时间(单位秒)(默认3秒)
session_recv_timeout = 3  #从数据包开始到接收完一个完整包的允许的时间(单位秒)(默认3s)
session_send_timeout = 3  #从数据包开始到发送完一个完整包的允许的时间(单位秒)(默认3s)
session_max_recv_size = 65536 #会话保存的最大接收数据长度(默认64K)
session_max_send_size = 65536 #会话保存的最大发送数据长度(默认64K)
session_req_per_sec = 1000  #每秒最大请求数(小等于0表示不限制)
session_req_timeout = 5  #请求超时(小等于0表示无限制,单位秒)

#listen的配置
[TCP_LISTEN_0]
id = 0
ip = 127.0.0.1  #监听地址
port = 3001  #监听端口
accept_queue = 128  #接收队列大小(默认128)
session_param = SESSION_LISTEN_COMM #使用指定节的session参数配置

#AccessSr接收客户端请求的配置
[TCP_LISTEN_1]
id = 1
ip = 127.0.0.1  #监听地址
port = 3000  #监听端口
accept_queue = 128  #接收队列大小(默认128)
session_param = TCP_LISTEN_1 #使用指定节的session参数配置
session_max_num = 1000  #会话最大个数(默认100)  (注:目前只实现1个连接,后面可以考虑实现连接池)
session_block = 0  #0:非阻塞 1:阻塞(默认0)
session_idle_time = 3  #空闲超时时间(单位秒)(默认3秒)
session_recv_timeout = 3  #从数据包开始到接收完一个完整包的允许的时间(单位秒)(默认3s)
session_send_timeout = 3  #从数据包开始到发送完一个完整包的允许的时间(单位秒)(默认3s)
session_max_recv_size = 65536 #会话保存的最大接收数据长度(默认64K)
session_max_send_size = 65536 #会话保存的最大发送数据长度(默认64K)
session_req_per_sec = 1000  #每秒最大请求数(小等于0表示不限制)
session_req_timeout = 5  #请求超时(小等于0表示无限制,单位秒)


#connect的配置
[TCP_CONNECT_0]
ip = 127.0.0.1
port = 3003
session_param = SESSION_CONNECT_COMM

[TCP_CONNECT_1]
ip = 127.0.0.1
port = 3536
session_param=TCP_CONNECT_1  #使用的session参数配置
session_max_num = 1  #会话最大个数(默认100)  (注:目前只实现1个连接,后面可以考虑实现连接池)
session_block = 0  #0:非阻塞 1:阻塞(默认0)
session_recv_timeout = 3  #从数据包开始到接收完一个完整包的允许的时间(单位秒)(默认3秒)
session_send_timeout = 3  #从数据包开始到发送完一个完整包的允许的时间(单位秒)(默认3秒)
session_max_recv_size = 65536 #会话保存的最大接收数据长度(默认64K)
session_max_send_size = 65536 #会话保存的最大发送数据长度(默认64K)
session_req_per_sec = 1000  #每秒最大请求数(小等于0表示不限制)(默认1000)
session_req_timeout = 5  #请求超时(小等于0表示无限制,单位秒)(默认5秒)
